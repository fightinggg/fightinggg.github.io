<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  
  <url>
    <loc>https://fightinggg.github.io/languages/zh-CN.json</loc>
    
    <lastmod>2023-05-20T07:40:53.858Z</lastmod>
    
    <date>1684568453858</date>
    <title> | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/fightinggg/README.html</loc>
    
    <lastmod>2023-05-20T07:40:53.850Z</lastmod>
    
    <date>1684568453850</date>
    <title> | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/categories/index.html</loc>
    
    <lastmod>2023-05-20T07:40:53.846Z</lastmod>
    
    <date>1565869253000</date>
    <title>categories | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/404.html</loc>
    
    <lastmod>2023-05-20T07:40:53.818Z</lastmod>
    
    <date>1684568453818</date>
    <title> | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/RUSDW0.html</loc>
    
    <lastmod>2023-05-17T05:00:00.000Z</lastmod>
    
    <date>1684299600000</date>
    <title>智慧的疆界：从图灵机到人工智能 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 图灵已经找到了计算能力的基石，但寻找智慧的基石这项工作，仍然没有见到成功的曙光，世界在等待着下一个“图灵”的出现。 谁会是下一个图灵呢，是奥特曼吗，我们不得而知，GPT的发布如火如荼，吸引了全世界的注意力。</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/RS7SSC.html</loc>
    
    <lastmod>2023-03-28T05:05:00.000Z</lastmod>
    
    <date>1679979900000</date>
    <title>Transformer | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Transformer背景介绍 Transformer指的是一种架构，未来的NLP(自然语言处理)都可以使用此架构。Transformer由编码器、解码器(后面会介绍)等组成，他的输入是向量数组，输出是也是</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/RPN780.html</loc>
    
    <lastmod>2023-02-06T05:00:00.000Z</lastmod>
    
    <date>1675659600000</date>
    <title>2023你好 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 这里立Flag，没人看得到，没人看得到的Flag，就是能实现的Flag。</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/RFJ220.html</loc>
    
    <lastmod>2022-07-24T13:42:00.000Z</lastmod>
    
    <date>1658670120000</date>
    <title>VPN与代理那些事 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial VPN 与 Proxy VPN 和Proxy有什么区别呢，国内的各大平台极力屏蔽了VPN和Proxy这两个关键字，很多人都分不清他们的关系。 VPN全名虚拟专用网络，Proxy全名代理。 其实，VPN工作于</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QMQ740.html</loc>
    
    <lastmod>2022-07-23T13:53:00.000Z</lastmod>
    
    <date>1610294400000</date>
    <title>Nginx | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/RF964O.html</loc>
    
    <lastmod>2022-07-19T05:34:00.000Z</lastmod>
    
    <date>1658208840000</date>
    <title>CPU架构介绍 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial CPU分类 CPU分两类，精简指令集CPU（RISC）和复杂指令集CPU（CISC）。Intel、AMD厂商主要做复杂指令集CPU；IBM，ARM厂商主要做精简指令集CPU。 精简指令集CPU能耗低，性能相</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/RF3QFO.html</loc>
    
    <lastmod>2022-07-16T07:07:00.000Z</lastmod>
    
    <date>1657955220000</date>
    <title>docker内部安装软件 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/RCFBSC.html</loc>
    
    <lastmod>2022-05-25T05:41:00.000Z</lastmod>
    
    <date>1653457260000</date>
    <title>白帽子讲Web安全 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 1. 总揽 很老的一本书，但是依然有阅读价值。 全书分为4个部分，其中比较重要的应该是第二章和第三章，第二章主要讲解客户端（浏览器）如何保障用户的安全，第三章主要讲解服务端如何保障用户安全。 2. 客户端安</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QWKWF0.html</loc>
    
    <lastmod>2022-05-05T09:06:00.000Z</lastmod>
    
    <date>1626843420000</date>
    <title>Java异常原因及处理 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Java常见异常 classDiagram Object &lt;|-- Throwable Throwable &lt;|-- Error Throwable &lt;|-- Exception Erro</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/R9L6IO.html</loc>
    
    <lastmod>2022-03-31T01:52:00.000Z</lastmod>
    
    <date>1648691520000</date>
    <title>spring13-AspectJ | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 1. AspectJ 1.1. AspectJ介绍 AspectJ官网1 AspectJ文档2 1.1.1. pointcuts pointcuts指的是程序中的某些链接点（某些时机），例如call(voi</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/R7DSQO.html</loc>
    
    <lastmod>2022-02-16T05:04:00.000Z</lastmod>
    
    <date>1644987840000</date>
    <title>C++引用的秘密 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 0. 一个错误的概念 123456int main() &#123; int a = 111; int &amp;b = a; b = 222; std::cout&lt;&lt;&amp;a&lt;&lt</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/R5MNS0.html</loc>
    
    <lastmod>2022-01-13T02:48:00.000Z</lastmod>
    
    <date>1642042080000</date>
    <title>Springfox使用 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/R1Z340.html</loc>
    
    <lastmod>2021-11-03T01:36:00.000Z</lastmod>
    
    <date>1635903360000</date>
    <title>Go入门-常见陷阱 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/R1D0ZO.html</loc>
    
    <lastmod>2021-10-22T03:43:00.000Z</lastmod>
    
    <date>1634874180000</date>
    <title>Go进阶-Module | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 1. Module使用 在文章Go入门-Go语言从入门到进阶实战中，我们介绍了GO项目的结构，但是没有解释其中的一个文件go.mod, 这其实是模块的意思。在go.mod中可以引入go的依赖。 123456</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/R17ULO.html</loc>
    
    <lastmod>2021-10-19T08:37:00.000Z</lastmod>
    
    <date>1634632620000</date>
    <title>Go入门-Effective-Go | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 1. Effective GO https://github.com/bingohuang/effective-go-zh-en 2. 格式化 在最开始学习GO的时候，写了几篇Blog，发现代码里面的对齐都</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/R162KO.html</loc>
    
    <lastmod>2021-10-19T05:49:00.000Z</lastmod>
    
    <date>1634549640000</date>
    <title>Go进阶-Web框架 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 0. 前言 简单介绍Beego和Gin，水一水文章。 1.1. 安装Beego库 1go get github.com/astaxie/beego 同时安装Bee工具 1go get github.com/</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/R0T00O.html</loc>
    
    <lastmod>2021-10-14T11:58:00.000Z</lastmod>
    
    <date>1633939800000</date>
    <title>Go入门-Go语言从入门到进阶实战 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 1. 开始学习Go 从一本书开始，这本书叫做《Go语言从入门到进阶实战（视频教学版）》,当然这篇Blog并不是所有的内容都来自这本书，毕竟书中也有不足之处。 2. Hello World 学啥语言的第一步都</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/R0X17C.html</loc>
    
    <lastmod>2021-10-13T12:26:00.000Z</lastmod>
    
    <date>1634127960000</date>
    <title>Go进阶-协程的本质与CPU的争夺 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 1. 从协程谈起 很多语言都支持协程，那什么是协程，和线程进程有什么区别呢？这里推荐一篇Blog，笔者直接提取其中最重要的部分 进程、线程 和 协程 之间概念的区别 对于 进程、线程，都是有内核进行调度，有</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/R089MO.html</loc>
    
    <lastmod>2021-09-30T03:28:00.000Z</lastmod>
    
    <date>1632972480000</date>
    <title>磁盘设备指令 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QZX2O0.html</loc>
    
    <lastmod>2021-09-24T11:27:00.000Z</lastmod>
    
    <date>1632450240000</date>
    <title>Java运行时分析工具 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Jps jps 可以看到运行中的java进程 123sh-4.2$ jps370 xxx.jar180682 Jps Jcmd jcmd可以看到运行中的java进程以及参数 123sh-4.2$ jcmd3</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QHHB40.html</loc>
    
    <lastmod>2021-09-24T03:33:00.000Z</lastmod>
    
    <date>1601481600000</date>
    <title>k8s | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial K8S 安装docker 12345678910111213141516sudo yum remove docker \ docker-client \ docker-client-latest \ doc</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QZX4AC.html</loc>
    
    <lastmod>2021-09-24T02:59:00.000Z</lastmod>
    
    <date>1632452340000</date>
    <title>linux指令-systemctl | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QZIIYO.html</loc>
    
    <lastmod>2021-09-18T05:44:00.000Z</lastmod>
    
    <date>1631771520000</date>
    <title>计算机病毒揭秘与对抗 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 书评 一星，书写的不好，非常牵强，代码过多，并且大多为Windows下的代码，全书主要分析的是Windows操作系统下的病毒。 2.2. 计算机病毒常见表现行为及目的 2.2.1. 病毒如何爆发 欺骗用户-</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QZ4DM0.html</loc>
    
    <lastmod>2021-09-08T14:30:00.000Z</lastmod>
    
    <date>1631111400000</date>
    <title>计算机网络-法律篇 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 张三写了一个计算机病毒，上传到了Github，张三犯不犯法？ 张三从黑客那里盗用了一些肉鸡去攻打其他非法网站，张三犯不犯法？ ... 法律法规 目前国家级别的计算机相关的法律一共有6本，分别是 《最高人民法</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QZ0M0C.html</loc>
    
    <lastmod>2021-09-06T13:41:00.000Z</lastmod>
    
    <date>1630935660000</date>
    <title>破坏之王：DDOS攻击与防范深度剖析 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 1. 笔者序 这篇Blog记录了笔者对《破坏之王： DDoS攻击与防范深度剖析》的学习记录，贡献出来和大家一起学习。 为什么学这个，笔者的服务在2021年9月4日晚上遭受了惨重的DDoS攻击，攻击者使用了1</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QV7MPT.html</loc>
    
    <lastmod>2021-08-29T09:41:05.000Z</lastmod>
    
    <date>1624544705000</date>
    <title>跟我一起自己写编译器-6.语义分析 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 6. 语义分析 6.1. 语法制导翻译 语法制导翻译分为两类，一类是S型语法制导翻译，另一类是L型语法制导翻译。这里我们主要介绍S型语法制导翻译，因为他更简单，更加适用于语法树。 6.2. S型语法制导翻译</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QV7MPS.html</loc>
    
    <lastmod>2021-08-29T09:41:04.000Z</lastmod>
    
    <date>1624544704000</date>
    <title>跟我一起自己写编译器-5.10.LR语法分析 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 5.10. LR语法分析 经过了前面的LL语法分析，现在我们进入到了LR语法分析，LR语法分析也是一套算法，这里主要介绍两个，一个是SLR算法，领个是LR1算法。 LR语法分析本质上为从左到右自底向上算法，</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QV7MPR.html</loc>
    
    <lastmod>2021-08-29T09:41:03.000Z</lastmod>
    
    <date>1624544703000</date>
    <title>跟我一起自己写编译器-5.语法分析 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 5. 语法分析 5.1. 文法 文法的种类有很多，正则文法，上下文无关文法，上下文有关文法。 5.1.1. 正则文法 这一块内容就是我们平时所用到的正则表达式的文法，他的词是各个字符。 5.1.2. 上下文</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QV7MPQ.html</loc>
    
    <lastmod>2021-08-29T09:41:02.000Z</lastmod>
    
    <date>1624544702000</date>
    <title>跟我一起自己写编译器-4.词法分析 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 5. 词法分析 词法分析，如其名，只分析词语，即token，词是一个文法的最小单元。至于什么是文法，后面会介绍，这里不需要过多忧虑。 5.1. 举个例子 比如我们有一个代码,这个代码和c/c++很相似（但是</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QV7MPO.html</loc>
    
    <lastmod>2021-08-29T09:41:00.000Z</lastmod>
    
    <date>1624544700000</date>
    <title>跟我一起自己写编译器-123.引言 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 1. 引言 想做编译器很久了，大学期间留下了不少遗憾，没有实现自己的编译器，没有实现自己的JVM，没有实现自己的数据库，当然这其中有很多原因，比如学院的要求太松，比如自己也不够主动，经过两个多月的学习，笔者</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/link/index.html</loc>
    
    <lastmod>2021-08-25T01:30:30.000Z</lastmod>
    
    <date>1629855030000</date>
    <title>友链 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QWKWK0.html</loc>
    
    <lastmod>2021-07-21T05:00:00.000Z</lastmod>
    
    <date>1626843600000</date>
    <title>UML图表指引 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial UML 统一建模语言（英语：Unified Modeling Language，缩写 UML）是非专利的第三代建模和规约语言。UML是一种开放的方法，用于说明、可视化、构建和编写一个正在开发的、面向对象的、</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QVZE5O.html</loc>
    
    <lastmod>2021-07-09T14:13:00.000Z</lastmod>
    
    <date>1625839980000</date>
    <title>通过开源项目获取jetbrains全家桶License | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QVAQR0.html</loc>
    
    <lastmod>2021-06-26T06:45:00.000Z</lastmod>
    
    <date>1624689900000</date>
    <title>redis源码 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 版本 使用6.2.4 sds.h sds.c 内存对齐 __attribute__((__packed__))可以让编译器对结构体不进行内存对齐，详细参考 1234567891011121314151617</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QUCE80.html</loc>
    
    <lastmod>2021-06-07T17:36:00.000Z</lastmod>
    
    <date>1623087360000</date>
    <title>Flink学习 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 运行源码 我们将运行1.13.0版本的Flink，其scala环境为2.12 Step1. 获取学习项目 1git clone https://github.com/fightinggg/flink-src</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QRN6OO.html</loc>
    
    <lastmod>2021-06-05T06:44:00.000Z</lastmod>
    
    <date>1618551960000</date>
    <title>自己动手写Docker | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 容器与开发语言 容器 随着云计算领域的兴起，容器这个词出现了，但是什么是容器？ 容器英文名Container，是基于Linux Namespace以及Cgroups技术实现的具备隔离特性的一组进程。 OK，</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QTT5OC.html</loc>
    
    <lastmod>2021-05-28T08:17:00.000Z</lastmod>
    
    <date>1622189820000</date>
    <title>Kafka-Docker | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QTI5FC.html</loc>
    
    <lastmod>2021-05-22T09:38:00.000Z</lastmod>
    
    <date>1621676280000</date>
    <title>发布Maven二方包到Github仓库 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 使用Github Packages Repository 这里主要介绍Github packages搭建私服，这种方案上传和下载都需要使用token 步骤1 访问地址 ,点击Generate new tok</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QS2CIO.html</loc>
    
    <lastmod>2021-04-24T10:16:00.000Z</lastmod>
    
    <date>1619259360000</date>
    <title>latex常用公式 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 符号 右键符号选择Copy to Clipboard即可复制代码。 数学 符号 查看 点乘 \[\cdot\] 集合论 符号 查看 交 \[\cap\] 并 \[\cup\] 笛卡尔积 \[\times\]</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QRTMJC.html</loc>
    
    <lastmod>2021-04-19T17:14:00.000Z</lastmod>
    
    <date>1618852440000</date>
    <title>httpd | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QRNM0C.html</loc>
    
    <lastmod>2021-04-16T11:17:00.000Z</lastmod>
    
    <date>1618571820000</date>
    <title>CICD | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial CI/CD 持续集成、持续交付、持续部署 Continuous Integration 持续集成，即每当开发者对代码进行push，会自动化构建流水线，在流水线中进行自动化冒烟测试，进行集成测试，当测试通过，</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QRACQO.html</loc>
    
    <lastmod>2021-04-15T04:54:00.000Z</lastmod>
    
    <date>1617953280000</date>
    <title>腾讯云轻量级云服务器 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 选购服务器 点击链接并登陆即可来到轻量级服务器的选购地址，然后我们选择香港，选择centos8。选香港是因为那边的服务器可以访问外网并搭建VPN，而且域名也不用备案，比较简单，选centos8是因为现在流行</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QR767C.html</loc>
    
    <lastmod>2021-04-14T03:34:00.000Z</lastmod>
    
    <date>1617804840000</date>
    <title>八股文 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 前言 最讨厌的东西就是八股文了，但是没办法，这东西会忘记，不记不行。 题库开始 OSI七层网络是什么 答案 七层网络各有哪些协议 答案</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QRBYM0.html</loc>
    
    <lastmod>2021-04-11T04:18:00.000Z</lastmod>
    
    <date>1618028280000</date>
    <title>美团笔试2 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 备注 美团笔试每次都能教育人，太难了。 第一题 输入n，k，然后输入n个数字，数字为0代表Alis的房子可能出现在这里，数字非0代表其他的房子（数字的值就是价格），你要买一个房子，然后距离Alis的房子的期</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QRCS8O.html</loc>
    
    <lastmod>2021-04-10T14:58:00.000Z</lastmod>
    
    <date>1618066680000</date>
    <title>滴滴笔试题 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 总揽 两题都是10行代码不到就写了 第一题 题意 你有一个操作系统，他将要执行n个任务，每个任务有两个阶段，准备阶段和执行阶段，任务必须先完成准备，然后才能执行。 你的操作系统在任意时刻可以执行一个任务，并</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQOSZ9.html</loc>
    
    <lastmod>2021-04-09T14:51:00.000Z</lastmod>
    
    <date>1616947893000</date>
    <title>蓄水池算法 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 题目描述 你的公司想要开一个活动，每个用户都能抽奖，但是最终只有\(M(M=10)\)个用户能中奖。 当一个用户点击抽奖按钮，你的后台会收到他的账号 但是你不知道什么时候活动结束，你也没办法储存所有的账号，</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QR6OSO.html</loc>
    
    <lastmod>2021-04-07T07:58:00.000Z</lastmod>
    
    <date>1617782280000</date>
    <title>Kafka权威指南 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 由于这是第三篇Kafka方面的学习资源，参见 深入理解Kafka-核心设计与实践原理和Kafka，所以笔者对一些重复的部分进行了跳过，这里只写一些很重要的内容以及有趣的知识。</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQRN80.html</loc>
    
    <lastmod>2021-04-07T03:48:00.000Z</lastmod>
    
    <date>1617080400000</date>
    <title>深入理解Kafka-核心设计与实践原理 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 深入理解Kafka: 核心设计与原理实践 5.1 文件目录布局 kafka文件目录中有很多文件，一般情况下我们只需要掌握*.index, *.log,*.timeindex*即可</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QR4S3C.html</loc>
    
    <lastmod>2021-04-06T07:14:00.000Z</lastmod>
    
    <date>1617693240000</date>
    <title>Kafka时间轮 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 原文链接 侵删 一张图理解Kafka时间轮(TimingWheel),看不懂算我输! 本文是【字节可视化系列】Kafka专栏文章。 通过本文你将了解到时间轮算法思想，层级时间轮，时间轮的升级和降级。</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QN6V40.html</loc>
    
    <lastmod>2021-04-05T14:32:00.000Z</lastmod>
    
    <date>1611072000000</date>
    <title>设计模式Java版 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 设计模式（JAVA版） 第四章 结构型模式 代理模式 在spring中，我们常用的动态代理就是代理模式，代理模式目的是代理对象，增强其原有的功能，例如日志打印，数据库事务等</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQZ90O.html</loc>
    
    <lastmod>2021-04-05T09:14:00.000Z</lastmod>
    
    <date>1617435240000</date>
    <title>HTTP权威指南 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial HTTP权威指南 第一章： HTTP概述 媒体类型 因特上有数千种不同的数据类型,HTTP仔细地给每种要通过Web传输的对象都打上了名为MIME类型( MIME type)的数据格式标签。最初设计MIME(</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QR12J0.html</loc>
    
    <lastmod>2021-04-04T15:00:00.000Z</lastmod>
    
    <date>1617520140000</date>
    <title>从TCP看HTTP | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 以下我们演示一条HTTP请求指令 123[root@11c749e93da4 /]# curl www.baidu.com&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQWYM0.html</loc>
    
    <lastmod>2021-04-04T08:30:00.000Z</lastmod>
    
    <date>1617328440000</date>
    <title>TCP-IP详解-卷一-协议 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial TCP-IP详解 慎重 这是一本工具书！！！！！！！！！！ 这本书和我想象中的不太一样，他不偏向于技术，他更加注重细节，更像是一本工具书，先到这里了，不细看了，有需要再补充 21/4/2 新建 ARP协议、</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQTKJ0.html</loc>
    
    <lastmod>2021-03-31T05:57:00.000Z</lastmod>
    
    <date>1617170220000</date>
    <title>计算机网络-自顶向下方法 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 第一章 计算机网络和因特网 网络边缘 端系统： 通常把与因特网相连的计算机和其他设备称为端系，因为它们位于因特网的边缘， 故而被称为端系统 ，端系统也称为主机 host , 因为它们容纳（即运行）应用程序，</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q5KTS0.html</loc>
    
    <lastmod>2021-03-30T13:47:31.000Z</lastmod>
    
    <date>1581490368000</date>
    <title>垃圾收集器与内存分配策略 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQRP8M.html</loc>
    
    <lastmod>2021-03-30T05:43:34.000Z</lastmod>
    
    <date>1617083014000</date>
    <title>变长整型 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 变长整型 大家都知道一般整型int占用32位，我们不管如何储存，他都是4个字节，如果我们有一份数据，里面大部分都是很小的数字（8位即可表示），夹杂了一些32位的大数。这个时候应该如何编码，让他占用空间少一点</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQQOWM.html</loc>
    
    <lastmod>2021-03-29T16:38:46.000Z</lastmod>
    
    <date>1617035926000</date>
    <title>分布式session | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QPI740.html</loc>
    
    <lastmod>2021-03-29T13:26:00.000Z</lastmod>
    
    <date>1614960000000</date>
    <title>操作系统导论 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 操作系统导论</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8434P.html</loc>
    
    <lastmod>2021-03-29T12:54:27.000Z</lastmod>
    
    <date>1585748185000</date>
    <title>操作系统6-页面置换算法 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 页面置换算法 当缺页中断发生的时候，需要做交换，我们需要尽量减少交换的次数。 # 最优页面置换算法 将等待下一层的访问时间最长的那个页面置换出去，这个算法不可能实现，但是可作为评价其他算法的标准 # 先进先</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7E57R.html</loc>
    
    <lastmod>2021-03-29T03:54:50.000Z</lastmod>
    
    <date>1584537831000</date>
    <title>计算机网络 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 七层网络 应用层: 针对应用程序的通信服务，大多数文件传输需要第七层 表示层: 加密数据和定义数据格式(ASCII或者二进制) 会话层: 将断开的数据合并，完成回话，则表示层看到的数据是连续的 传输层: T</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQPNNQ.html</loc>
    
    <lastmod>2021-03-29T03:14:14.000Z</lastmod>
    
    <date>1616987654000</date>
    <title>PING的时候发生了什么 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial PING 我们常常使用ping来测试网络的联通性，但是你知道他是属于哪一次层的吗？其实ping属于网络层，他使用ICMP协议, 他没有使用UDP或者TCP。</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQPLTI.html</loc>
    
    <lastmod>2021-03-29T02:34:30.000Z</lastmod>
    
    <date>1616985270000</date>
    <title>ARP协议 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial ARP Address Resolution Protocol， 地址解析协议，实现IP地址到MAC地址的映射。 在局域网中，网络中实际传输的是“帧”，帧里面是有目标主机的MAC地址的。在以太网中，一个主机</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQPI8C.html</loc>
    
    <lastmod>2021-03-29T01:17:00.000Z</lastmod>
    
    <date>1616980620000</date>
    <title>操作系统进程如何通信 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQL340.html</loc>
    
    <lastmod>2021-03-26T16:00:00.000Z</lastmod>
    
    <date>1616774400000</date>
    <title>腾讯实习 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQHDS0.html</loc>
    
    <lastmod>2021-03-24T16:00:00.000Z</lastmod>
    
    <date>1616601600000</date>
    <title>k8s学习 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial k8s 学习总结</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9N2VH.html</loc>
    
    <lastmod>2021-03-24T12:15:00.000Z</lastmod>
    
    <date>1588313933000</date>
    <title>mermaid基本操作 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Mermaid 这是一个画图的东西，他可以画有向图、无向图、流程图、时序图、类图、状态图等等，官网在这 有一个坑，就是md文件第一非空行不可以是#mermaid, 否则渲染失败，所以我这用了Mermaid作</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQ1NO0.html</loc>
    
    <lastmod>2021-03-16T04:12:00.000Z</lastmod>
    
    <date>1615867920000</date>
    <title>logstash | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QQ01M0.html</loc>
    
    <lastmod>2021-03-15T07:18:00.000Z</lastmod>
    
    <date>1615792680000</date>
    <title>filebeat | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QPZUWC.html</loc>
    
    <lastmod>2021-03-15T04:53:00.000Z</lastmod>
    
    <date>1615783980000</date>
    <title>docker-mysql | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QPZURC.html</loc>
    
    <lastmod>2021-03-15T04:50:00.000Z</lastmod>
    
    <date>1615783800000</date>
    <title>k8s故障 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8AYFB.html</loc>
    
    <lastmod>2021-03-14T07:34:00.000Z</lastmod>
    
    <date>1586068679000</date>
    <title>hexo博客搭建浅谈 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 博客崩溃了 我很难受，重新开始配置一下，然后我记录一下过程 初始化博客 script1hexo init 然后我碰到了第一个问题 script12345678910111213141516171819202</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/hot/index.html</loc>
    
    <lastmod>2021-03-14T06:58:10.000Z</lastmod>
    
    <date>1615705090000</date>
    <title>热度排行 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8S6PM.html</loc>
    
    <lastmod>2021-03-13T11:22:00.000Z</lastmod>
    
    <date>1586872570000</date>
    <title>springboot | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial SpringBoot与Web 先在idea中选择场景 springboot已经默认将这些常见配置好了，我们只需要在配置文件中指定少量配置就可以运行起来 然后我们可以开始编写业务代码了</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9I7BR.html</loc>
    
    <lastmod>2021-03-13T11:21:00.000Z</lastmod>
    
    <date>1588086423000</date>
    <title>SpringBoot7-自定义starter | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 如何编写 理清依赖 自动配置 @Configuration 指定这个是配置类 @ConditionalOnxxx 在某些条件下才生效 @AutoConfigureAfter 指定自动配置类的顺序 @Bean</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QOEDYO.html</loc>
    
    <lastmod>2021-02-12T04:12:00.000Z</lastmod>
    
    <date>1613102640000</date>
    <title>test | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QNH9VO.html</loc>
    
    <lastmod>2021-01-25T06:55:00.000Z</lastmod>
    
    <date>1611557700000</date>
    <title>hexo部署到私人服务器 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QMBDS0.html</loc>
    
    <lastmod>2021-01-02T16:00:00.000Z</lastmod>
    
    <date>1609603200000</date>
    <title>mysql常用指令 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Mysql 查看表的定义 1show create table table_name;</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QM24G0.html</loc>
    
    <lastmod>2020-12-28T16:00:00.000Z</lastmod>
    
    <date>1609171200000</date>
    <title>hexo中valine出现403 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QLYF40.html</loc>
    
    <lastmod>2020-12-26T16:00:00.000Z</lastmod>
    
    <date>1608998400000</date>
    <title>typora | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Typora 自定义配置 参考</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QLE1S0.html</loc>
    
    <lastmod>2020-12-15T16:00:00.000Z</lastmod>
    
    <date>1608048000000</date>
    <title>springcloud-cluster | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QKVJ40.html</loc>
    
    <lastmod>2020-12-05T16:00:00.000Z</lastmod>
    
    <date>1607184000000</date>
    <title>Java杂谈 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial JAVA IDEA Spring Boot 启动命令行太长 修改文件.idea/workspace.xml 12&lt;component name=&quot;PropertiesComponent&qu</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QK7GG0.html</loc>
    
    <lastmod>2020-11-22T16:00:00.000Z</lastmod>
    
    <date>1606060800000</date>
    <title>容器化开发 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 容器化开发 https://segmentfault.com/a/1190000023095631 注意事项 对于所有的容器化开发，我们的时区都需要设置 1-v /etc/localtime:/etc/lo</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QJJDS0.html</loc>
    
    <lastmod>2020-11-09T16:00:00.000Z</lastmod>
    
    <date>1604937600000</date>
    <title>springcloud-gateway | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Spring Cloud Gateway 1234567891011121314151617181920212223242526272829303132333435363738394041424344454</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QJ6F40.html</loc>
    
    <lastmod>2020-11-02T16:00:00.000Z</lastmod>
    
    <date>1604332800000</date>
    <title>aware | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Aware BeanNameAware beanNameAware可以获得容器中Bean的名称，作用于每一个Bean。当bean被创建的时候设置他的名字，在基本properties填充完成以后，init调用</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QJ2PS0.html</loc>
    
    <lastmod>2020-10-31T16:00:00.000Z</lastmod>
    
    <date>1604160000000</date>
    <title>feign | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QIZ0G0.html</loc>
    
    <lastmod>2020-10-29T16:00:00.000Z</lastmod>
    
    <date>1603987200000</date>
    <title>webFlux | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Spring Boot Starter Webflux</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QIPR40.html</loc>
    
    <lastmod>2020-10-24T16:00:00.000Z</lastmod>
    
    <date>1603555200000</date>
    <title>ratelimiter | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Guava RateLimiter 1234567891011121314151617RateLimiter rateLimiter = RateLimiter.create(10);for (int i </desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QI78G0.html</loc>
    
    <lastmod>2020-10-14T16:00:00.000Z</lastmod>
    
    <date>1602691200000</date>
    <title>深入浅出HTTPS从原理到实战 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 深入浅出HTTPS从原理到实战</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QHOPS0.html</loc>
    
    <lastmod>2020-10-04T16:00:00.000Z</lastmod>
    
    <date>1601827200000</date>
    <title>docker | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Docker 常见参数 资源限制 12--cpus 0.8-m 800m 文件夹映射 1-v /root/.m2:/root/.m2</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QGNKU0.html</loc>
    
    <lastmod>2020-09-14T14:42:00.000Z</lastmod>
    
    <date>1600094520000</date>
    <title>SSH | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QGLTS0.html</loc>
    
    <lastmod>2020-09-13T16:00:00.000Z</lastmod>
    
    <date>1600012800000</date>
    <title>Linux | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QG1GG0.html</loc>
    
    <lastmod>2020-09-02T16:00:00.000Z</lastmod>
    
    <date>1599062400000</date>
    <title>elasticSearch | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Elasticsearch 文档 https://www.elastic.co/guide/en/elasticsearch/reference/current/elasticsearch-intro.ht</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QFU1S0.html</loc>
    
    <lastmod>2020-08-29T16:00:00.000Z</lastmod>
    
    <date>1598716800000</date>
    <title>Impala | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Impala impala提供对HDFS、Hbase数据的高性能、低延迟的交互式SQL查询功能。基于Hive使用内存计算，兼顾数据仓库、具有实时、批处理、多并发等优点。</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QFH340.html</loc>
    
    <lastmod>2020-08-22T16:00:00.000Z</lastmod>
    
    <date>1598112000000</date>
    <title>Hadoop学习 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Hadoop</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QC7ZVF.html</loc>
    
    <lastmod>2020-06-20T10:30:51.000Z</lastmod>
    
    <date>1592649051000</date>
    <title>data-mining | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 《Data Mining Concepts and Techniques · JiaWei Han Micheline Kamber Jian Pai》学习总结</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/QACTF3.html</loc>
    
    <lastmod>2020-05-15T03:52:15.000Z</lastmod>
    
    <date>1589514735000</date>
    <title>reactive | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9N2JF.html</loc>
    
    <lastmod>2020-05-01T06:11:39.000Z</lastmod>
    
    <date>1588313499000</date>
    <title>SpringCloud5 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9N07S.html</loc>
    
    <lastmod>2020-05-01T05:21:28.000Z</lastmod>
    
    <date>1588310488000</date>
    <title>SpringCloud4 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9JK3W.html</loc>
    
    <lastmod>2020-04-29T08:40:44.000Z</lastmod>
    
    <date>1588149644000</date>
    <title>SpringCloud3 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 入门资料 中文文档 官方文档 中文文档 社区 嘿嘿</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9JFNP.html</loc>
    
    <lastmod>2020-04-29T07:04:37.000Z</lastmod>
    
    <date>1588143877000</date>
    <title>SpringCloud2-微服务 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 微服务于微服务架构 微服务强调服务的大小，他关注某一个点，一个模块只做一种事情 微服务架构通常而言，他提倡将单一的程序划分为一组小的服务，每个服务运行在独立的进程中，采用轻量级的通信机制 doubbo是rp</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9I38V.html</loc>
    
    <lastmod>2020-04-28T13:38:55.000Z</lastmod>
    
    <date>1588081135000</date>
    <title>SpringBoot6-启动的源码分析 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 启动配置原理 几个重要的事件回调机制 - ApplicationContextInitializer - SpringApplicationRunListener - ApplicationRunner -</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9I31Z.html</loc>
    
    <lastmod>2020-04-28T13:34:47.000Z</lastmod>
    
    <date>1588080887000</date>
    <title>SpringBoot5-数据访问 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 创建项目 选择MySQL+JDBC+Web # 链接数据库 123456spring: datasource: username: root password: 123456 url: jdbc:mysql</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9HN1S.html</loc>
    
    <lastmod>2020-04-28T07:49:04.000Z</lastmod>
    
    <date>1588060144000</date>
    <title>SpringMVC6-Ajax | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9GEX3.html</loc>
    
    <lastmod>2020-04-27T15:55:51.000Z</lastmod>
    
    <date>1588002951000</date>
    <title>SpringMVC5-SSM | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 整合 创建数据库 导入依赖 建立基本结构和配置框架 编写MyBatis.xml 编写Spring-dao.xml 编写Spring-service.xml 编写web.xml 编写Spring-mvc.xm</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9FYT4.html</loc>
    
    <lastmod>2020-04-27T10:07:52.000Z</lastmod>
    
    <date>1587982072000</date>
    <title>MyBatis2-原理 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9FQAC.html</loc>
    
    <lastmod>2020-04-27T07:03:48.000Z</lastmod>
    
    <date>1587971028000</date>
    <title>MyBatis1-入门 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial MyBatis 是一个对JDBC的封装，是一个数据持久化框架 # 优点 减少代码量，降低维护成本，讲SQL写到XML中，降低耦合度，支持动态SQL语句，支持标签映射， # 缺点 SQL编写工作量大，SQL语</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9EFRT.html</loc>
    
    <lastmod>2020-04-26T14:19:05.000Z</lastmod>
    
    <date>1587910745000</date>
    <title>SpringMVC4-JSON2 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9ATMZ.html</loc>
    
    <lastmod>2020-04-24T15:28:11.000Z</lastmod>
    
    <date>1587742091000</date>
    <title>SpringMVC3-JSON | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9ARQ4.html</loc>
    
    <lastmod>2020-04-24T14:46:52.000Z</lastmod>
    
    <date>1587739612000</date>
    <title>SpringMVC2-注解 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 注解配置Controller 这里的19行是spring中的注解扫描，21行是不去处理静态资源，23行是配置处理器的适配器 12345678910111213141516171819202122232425</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9A8X6.html</loc>
    
    <lastmod>2020-04-24T08:00:42.000Z</lastmod>
    
    <date>1587715242000</date>
    <title>SpringCloud1-入门 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 集群/分布式 集群是多台计算机为了完成同一个工作，组合在一起达到更高的效率的系统 分布式是为了完成一个工作，将工作拆分为多个服务，分别运行在不同机器上的系统</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9A3PJ.html</loc>
    
    <lastmod>2020-04-24T06:08:07.000Z</lastmod>
    
    <date>1587708487000</date>
    <title>内网穿透 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 问题提出 最近在我的世界群里面看到他们谈论游戏的时候，谈到了服务器上面，他们一谈服务器就是192.168.xxx.xxx, 这就让我很困惑，这不是局域网IP吗，你们是怎么玩到一起去的？ # 内网穿透 就是一</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q988YW.html</loc>
    
    <lastmod>2020-04-23T06:06:32.000Z</lastmod>
    
    <date>1587621992000</date>
    <title>SpringMVC1-开头 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial SpringMVC 少写博客,多思考，多看官方文档, 那我就写一篇算了 更新: 写一篇是不可能写一篇的，这辈子都不可能只写一篇 # MVC model(dao,service) + view(jsp) + </desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q973UK.html</loc>
    
    <lastmod>2020-04-22T15:18:20.000Z</lastmod>
    
    <date>1587568700000</date>
    <title>SpringBoot4-Web5-烂尾 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 需求 员工列表 普通CRUD restfulCRUD 查询 getEmp emp...GET 添加 addEmp? emp...POST 修改 updateEmp? emp/{id}...PUT 删除 de</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q96SDK.html</loc>
    
    <lastmod>2020-04-22T11:10:32.000Z</lastmod>
    
    <date>1587553832000</date>
    <title>操作系统IO | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q9528D.html</loc>
    
    <lastmod>2020-04-21T12:48:13.000Z</lastmod>
    
    <date>1587473293000</date>
    <title>分布式系统 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 集群的到来 你为什么要使用集群? 如果一个问题可以在单机上解决，那就使用单机的方法，在使用分布式解决问题前，要充分尝试别的思路，因为分布式系统会让问题解决变得复杂 并行、容错、通信、安全/孤立</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q94EMK.html</loc>
    
    <lastmod>2020-04-21T04:18:20.000Z</lastmod>
    
    <date>1587442700000</date>
    <title>SpringBoot4-Web4-国际化 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 国际化 编辑国际化配置文件 使用ResourceBundleMessageSource管理国际化资源文件 在页面使用fmt:message取出国际化内容</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q90SQR.html</loc>
    
    <lastmod>2020-04-19T05:32:51.000Z</lastmod>
    
    <date>1587274371000</date>
    <title>Kafka | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Kafka概述 定义 Kafka是一个分布式的基于发布/订阅模式的消息队列，应用于大数据实时处理领域 消息队列的优点 主要是解耦和削峰 解耦 可恢复，如果系统中一部分组件失效，加入队列的消息仍然可以在系统恢</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8ZBH7.html</loc>
    
    <lastmod>2020-04-18T10:22:19.000Z</lastmod>
    
    <date>1587205339000</date>
    <title>Docker-Zookeeper集群部署 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 创建工作目录 123mkdir ~/DockerDesktopmkdir ~/DockerDesktop/Zookeepercd ~/DockerDesktop/Zookeeper</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8YUMK.html</loc>
    
    <lastmod>2020-04-18T04:18:20.000Z</lastmod>
    
    <date>1587183500000</date>
    <title>SpringBoot4-Web3-SpringMVC | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 扩展SpringMVC 123456789101112&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xm</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8Y0IS.html</loc>
    
    <lastmod>2020-04-17T17:28:04.000Z</lastmod>
    
    <date>1587144484000</date>
    <title>mac中ping-docker容器 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8X72K.html</loc>
    
    <lastmod>2020-04-17T06:51:56.000Z</lastmod>
    
    <date>1587106316000</date>
    <title>Zookeeper | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Zookeeper介绍 Zookeeper是一个为分布式应用提供一致性服务的软件，是Hadoop项目的一个子项目，是分布式应用程序协调服务 Zookeeper安装 这里有一个下载地址,也可以brew ins</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8VYLN.html</loc>
    
    <lastmod>2020-04-16T14:51:23.000Z</lastmod>
    
    <date>1587048683000</date>
    <title>美团笔试 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 2020/4/16美团笔试 不多说，美团的题真的出的好，尽管我没有做完，但是体验挺好的。 # 第一题 n个人，每个人m个科目，只要一个人某科是最高分或者最高分之一，我们就要为他颁奖，每个人最多颁奖一次，问最</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8V5C8.html</loc>
    
    <lastmod>2020-04-16T04:19:20.000Z</lastmod>
    
    <date>1587010760000</date>
    <title>SpringBoot4-Web2-模版引擎 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 模版引擎 常见的模版引擎有JSP,Velocity,Freemarker,Thymeleaf ### SpringBoot推荐的Thymeleaf 12345&lt;!-- 模版引擎--&gt;&lt;de</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8V5AK.html</loc>
    
    <lastmod>2020-04-16T04:18:20.000Z</lastmod>
    
    <date>1587010700000</date>
    <title>SpringBoot4-Web1-静态资源 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial SpringBoot与Web 先在idea中选择场景 SpringBoot已经默认将这些常见配置好了，我们只需要在配置文件中指定少量配置就可以运行起来 然后我们可以开始编写业务代码了 SpringBoot与</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8TZMM.html</loc>
    
    <lastmod>2020-04-15T13:18:22.000Z</lastmod>
    
    <date>1586956702000</date>
    <title>SpringBoot3-日志 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Springboot和日志 考虑和jdbc和数据库驱动一样，我们抽象出一个日志的接口 ## 常见的java日志 JUL,JCL,JBoss-logging,logback,log4j,log4j2,slf4</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8TZMI.html</loc>
    
    <lastmod>2020-04-15T13:18:18.000Z</lastmod>
    
    <date>1586956698000</date>
    <title>SpringBoot2-配置 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial springboot配置 配置文件 配置文件的名字是固定的 ### application.properties ### applicstion.yml YAML 是一个标记语言，不是一个标记语言 ####</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8TZMC.html</loc>
    
    <lastmod>2020-04-15T13:18:12.000Z</lastmod>
    
    <date>1586956692000</date>
    <title>SpringBoot1-介绍 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 微服务 讲大应用拆分成多个小应用 springboot介绍 创建maven工程 导入依赖 123456789101112&lt;parent&gt; &lt;groupId&gt;org.springfra</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8PP3V.html</loc>
    
    <lastmod>2020-04-13T05:40:43.000Z</lastmod>
    
    <date>1586756443000</date>
    <title>mysql-入门 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8PM7R.html</loc>
    
    <lastmod>2020-04-13T04:38:15.000Z</lastmod>
    
    <date>1586752695000</date>
    <title>Java并发编程13-并发总结 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8OMUY.html</loc>
    
    <lastmod>2020-04-12T15:54:34.000Z</lastmod>
    
    <date>1586706874000</date>
    <title>java并发编程12-集合的线程安全类 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 集合的线程安全类 遗留的线程安全类 Hashtable，Vector直接把同步加到方法上 ## 修饰的安全集合 装饰器模式，Syncronize* ## JUC安全集合 ### Blocking型 大部分实</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8OMUJ.html</loc>
    
    <lastmod>2020-04-12T15:54:19.000Z</lastmod>
    
    <date>1586706859000</date>
    <title>java并发编程11-JUC | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial JUC AQS AbstractQueuedSynchronizer 是阻塞式的锁和相关的同步器工具的框架 ReentrantLock 如何重入 用一个变量记录重入了多少次 ### NonfairSync </desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8OMU7.html</loc>
    
    <lastmod>2020-04-12T15:54:07.000Z</lastmod>
    
    <date>1586706847000</date>
    <title>java并发编程10-异步模式 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 异步模式-工作线程 线程不足导致饥饿 有两个线程A，B，任务有两种，上菜和做菜，显然上菜要等待做菜，如果AB都在执行上菜，就没有更多的线程做菜了，这就导致了AB在死等，注意这不是死锁， 所以不同的任务类型应</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8OMTV.html</loc>
    
    <lastmod>2020-04-12T15:53:55.000Z</lastmod>
    
    <date>1586706835000</date>
    <title>java并发编程9-JDK线程池 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial JDK的线程池 线程池状态，RUNNING，SHUTDOWN(不会再接受新任务了)，STOP(立刻停止)，TIDYING(任务执行完毕，即将TERMINATED)，TERMINATED 构造函数 1publ</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8OMTK.html</loc>
    
    <lastmod>2020-04-12T15:53:44.000Z</lastmod>
    
    <date>1586706824000</date>
    <title>java并发编程8-自定义线程池 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 自定义线程池 把main看作任务的生产者，把线程看作任务的消费者，这时候模型就建立出来了 于是我们需要一个缓冲区，采取消费正生产者模式，然后让消费者不断消费，并在适当的时候创建新的消费者，如果所有任务都做完</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8MP8T.html</loc>
    
    <lastmod>2020-04-11T14:50:53.000Z</lastmod>
    
    <date>1586616653000</date>
    <title>网易笔试第三题 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8MD9G.html</loc>
    
    <lastmod>2020-04-11T10:32:04.000Z</lastmod>
    
    <date>1586601124000</date>
    <title>java并发编程7-不可变设计 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 不可变就是线程安全 如String 拷贝构造函数 之间赋值 char[]构造 拷贝一份(保护性拷贝) 子串 如果下标起点和母串起点相同，则之间引用过去，否则保护性拷贝(不明白为啥不共用) 享元模式 最小化内</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8M6IO.html</loc>
    
    <lastmod>2020-04-11T08:06:24.000Z</lastmod>
    
    <date>1586592384000</date>
    <title>java并发编程6-无锁并发 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial CAS compareAndSet(prev,next);无锁，无阻塞 为什么效率高 失败的话会重新尝试，但是锁会进行上下文切换，代价大 原子整形 AtomicInteger 123incrementAnd</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8LY8O.html</loc>
    
    <lastmod>2020-04-11T05:07:36.000Z</lastmod>
    
    <date>1586581656000</date>
    <title>java并发编程5-Java内存 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial JMM Java Memory Model - 原子性: 保证指令不会收到线程上下文切换的影响 - 可见性: 保证指令不会受到cpu缓存的影响 - 有序性: 保证指令不会受到cpu指令并行优化的影响</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8KXQL.html</loc>
    
    <lastmod>2020-04-10T15:59:09.000Z</lastmod>
    
    <date>1586534349000</date>
    <title>java并发编程4-同步与互斥 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial synchronized 锁住对象，放在静态方法前为锁类，放在普通方法前为锁类的对像。使用管程实现 线程安全类 String, Integer, StringBuffer,Random,Vector,Has</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8K6JX.html</loc>
    
    <lastmod>2020-04-10T06:11:57.000Z</lastmod>
    
    <date>1586499117000</date>
    <title>java并发编程3-线程运行原理 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 栈 每个线程都有自己的栈， 线程上下文切换 CPU时间片用完 gc 有更高优先级的线程要运行 线程自己sleep,yield,wait,join,park,synchronized,lock</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8K2TR.html</loc>
    
    <lastmod>2020-04-10T04:51:27.000Z</lastmod>
    
    <date>1586494287000</date>
    <title>java并发编程2-创建和运行线程 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 使用Tread创建线程 123456789101112131415161718192021package com.wsx.test;import org.junit.Test;import org.slf4</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q82D98.html</loc>
    
    <lastmod>2020-04-09T13:01:41.000Z</lastmod>
    
    <date>1585667996000</date>
    <title>Java基础 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Automic 是一个原子类型包,其中包含了AtomicBoolean,AtomicInteger,AtomicLong等， 原子操作说是这样说的，然而并不是所有的物理机器都支持原子指令，所以不能保证不被阻</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8IRJ2.html</loc>
    
    <lastmod>2020-04-09T11:49:50.000Z</lastmod>
    
    <date>1586432990000</date>
    <title>java并发编程1-进程与线程 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial Where from 快来点我 进程 一个活动的程序，是程序的实例，大部分程序可以运行多个实例，有的程序只可以运行一个实例</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8INDH.html</loc>
    
    <lastmod>2020-04-09T10:20:05.000Z</lastmod>
    
    <date>1586427605000</date>
    <title>spring12-事务 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial spring支持的事务 似乎都是关于数据库的，可能也是我的水平问题，不知道其他的东西 大概需要实现两个，一个commit，另一个是rollback 事务是基于AOP实现的</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8H56B.html</loc>
    
    <lastmod>2020-04-08T14:49:23.000Z</lastmod>
    
    <date>1586357363000</date>
    <title>spring11-Jdbctemplate | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8GQ4Q.html</loc>
    
    <lastmod>2020-04-08T09:24:26.000Z</lastmod>
    
    <date>1586337866000</date>
    <title>mysql游标 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8F7Q5.html</loc>
    
    <lastmod>2020-04-07T13:49:17.000Z</lastmod>
    
    <date>1586267357000</date>
    <title>网易笔试 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 第一题 输入一个n，表示n个点的完全图，输入m表示后续有m个操作，输入s表示你站在s点这个位置 接下来m行，每行两个数字x,y 如果x=0 表示与y相连的所有边断开 否则 表示边x-y断开 你需要输出一个数</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7U3N4.html</loc>
    
    <lastmod>2020-04-07T07:25:07.000Z</lastmod>
    
    <date>1585282288000</date>
    <title>linux指令学习 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial MAN 操作手册 学linux，必须知道如何使用man，首先是安装man，或者在这里逛逛 1yum -y install man-pages SCP 上传本地文件到服务器 1scp -P [ssh端口] /</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8EN1R.html</loc>
    
    <lastmod>2020-04-07T06:22:39.000Z</lastmod>
    
    <date>1586240559000</date>
    <title>redis | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8DH6N.html</loc>
    
    <lastmod>2020-04-06T15:18:23.000Z</lastmod>
    
    <date>1586186303000</date>
    <title>mysql刷题1 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 查找最晚入职员工的所有信息 查找最晚入职员工的所有信息 CREATE TABLE employees ( emp_no int(11) NOT NULL, birth_date date NOT NULL,</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8BOQD.html</loc>
    
    <lastmod>2020-04-05T16:06:13.000Z</lastmod>
    
    <date>1586102773000</date>
    <title>spring10-配置AOP | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial spring中的AOP 连接点，被拦截到的点，在spring中指的是方法 切入点，被增强的连接点 通知 在调用方法前的是前置通知，在后面的是后置通知，在catch中的是异常通知，在final中的是最终通知，</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8BOQ3.html</loc>
    
    <lastmod>2020-04-05T16:06:03.000Z</lastmod>
    
    <date>1586102763000</date>
    <title>spring9-动态代理 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial account案例 我们有一个转账方法: 根据名称找到账户，转出账户减钱，转入账户加钱，更新转出账户，更新转入账户，这个方法没有事务的控制，可能出现问题 ## 案例问题 实际上我们需要维护一个和线程绑定的数</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8BOPJ.html</loc>
    
    <lastmod>2020-04-05T16:05:43.000Z</lastmod>
    
    <date>1586102743000</date>
    <title>spring8-spring整合junit | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial spring整合junit @RunWith 我们需要切换junit的main ## @ContextConfiguration 指定配置类或者配置文件 12345&lt;dependency&gt; &l</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8BOP2.html</loc>
    
    <lastmod>2020-04-05T16:05:26.000Z</lastmod>
    
    <date>1586102726000</date>
    <title>spring7-注解配置IOC | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 注解配置IOC 先总结一下之前的东西，曾经的XML配置，有标签id和class用于构造，有scope用来表示作用范围，有init-method和destroy-method用来表示生命周期，有propert</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8BOOS.html</loc>
    
    <lastmod>2020-04-05T16:05:16.000Z</lastmod>
    
    <date>1586102716000</date>
    <title>spring6-依赖注入 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial sprint的依赖注入 dependency injection IOC是降低程序之间的依赖关系的，我们把依赖关系交给spring维护，依赖关系的维护就叫做依赖注入 注入的类型 基本类型和Sring、 be</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8BOOH.html</loc>
    
    <lastmod>2020-04-05T16:05:05.000Z</lastmod>
    
    <date>1586102705000</date>
    <title>spring5-XML配置IOC | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial XML配置IOC 使用默认构造函数创建Bean 在spring的配置文件中使用Bean标签, 只配置id个class属性 12345&lt;beans xmlns=&quot;http://www.spri</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8BONM.html</loc>
    
    <lastmod>2020-04-05T16:04:34.000Z</lastmod>
    
    <date>1586102674000</date>
    <title>spring4-创建IOC容器 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 创建IOC容器 ApplicationContest 单例对象适用 - ClassPathXmlApplicationContext 可以加载类路径下的配置文件，要求配置文件在类路径下 - FileSyst</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8B97F.html</loc>
    
    <lastmod>2020-04-05T10:30:51.000Z</lastmod>
    
    <date>1586082651000</date>
    <title>软件测试-白盒测试 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q860KN.html</loc>
    
    <lastmod>2020-04-02T14:36:23.000Z</lastmod>
    
    <date>1585838183000</date>
    <title>spring3-耦合 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 耦合 我们考虑一个web应用，使用三层架构: 视图层+业务层+持久层， 视图层依赖业务层，业务层依赖持久层，这是非常不好的现象，当我们的持久层需要改变的时候，整个项目都要改变，项目非常不稳定。 怎么解决 工</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q85ZID.html</loc>
    
    <lastmod>2020-04-02T14:13:25.000Z</lastmod>
    
    <date>1585836805000</date>
    <title>Maven | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial maven依赖管理 maven工程可以帮助我们管理jar包的依赖，他有一个jar包仓库，这导致我们自己的项目会非常小。 maven启动 1mvn tomcat:run maven仓库启动 先本地，然后私服，</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q85LY4.html</loc>
    
    <lastmod>2020-04-02T09:20:28.000Z</lastmod>
    
    <date>1585819228000</date>
    <title>操作系统13-文件系统 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 文件系统和文件 一种持久性存储的系统抽象。 文件头 储存文件信息，保存文件属性，跟踪那一块储存块属于逻辑上文件结构的哪一个偏移。 需要哪些元数据来管理打开的文件 文件指针，文件打开计数，文件储存位置，访问权</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q85J17.html</loc>
    
    <lastmod>2020-04-02T08:17:31.000Z</lastmod>
    
    <date>1585815451000</date>
    <title>操作系统12-死锁 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 资源分配图 有两个集合，一个是进程集合，另一个是资源集合，如果进程i需要某资源j的一部分，则连边\(i\to j\), 如果一个资源j的一部分被分配给了进程i，则连边\(j\to i\), 资源分配图出现了</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q846CC.html</loc>
    
    <lastmod>2020-04-01T14:45:48.000Z</lastmod>
    
    <date>1585752348000</date>
    <title>操作系统11-同步 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 信号量 就是一个整型加上一个队列 1234class Semaphore&#123; int sem; WaitQueue q;&#125; P操作 让信号量减少1，如果&lt;0，把自己挂起 123456</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q844OR.html</loc>
    
    <lastmod>2020-04-01T14:10:03.000Z</lastmod>
    
    <date>1585750203000</date>
    <title>操作系统10-进入临界区 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial n个进程互斥，留坑 禁用中断 进入临界区以后禁用中断，离开临界区以后开启中断 一但禁用了中断，整个系统都停止，可能导致饥饿，要是临界区有个死循环就完蛋，多个CPU无法解决问题。</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8436X.html</loc>
    
    <lastmod>2020-04-01T13:37:45.000Z</lastmod>
    
    <date>1585748265000</date>
    <title>操作系统9-CPU调度 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial CPU调度 调度指标 CPU使用率(CPU忙状态所占的时间比例)，吞吐量(单位时间内完成的进程数量)，周转时间(一个进程从初始化到结束，花费的所有时间), 等待时间(进程在就绪队列中等待的总时间)， 响应时</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8435C.html</loc>
    
    <lastmod>2020-04-01T13:36:48.000Z</lastmod>
    
    <date>1585748208000</date>
    <title>操作系统8-线程 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 线程管理 线程控制块 TCB 类似PCB # 线程优点 一个进程可以同时存在多个线程，各个线程之间可以并发执行，各个线程之间可以恭喜那个地址空间和文件资源。 # 线程缺点 一个线程崩溃会导致所属进程的所有线</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q84350.html</loc>
    
    <lastmod>2020-04-01T13:36:36.000Z</lastmod>
    
    <date>1585748196000</date>
    <title>操作系统7-进程 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 进程管理 进程的组成 代码+数据+程序计数器中的值，堆和栈，一组资源(打开的文件) # 进程的特点 动态创建，并发或者并行，独立(执行的正确性不受其他进程影响) # 进程控制块(PCB) 操作系统为每个进程</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8434C.html</loc>
    
    <lastmod>2020-04-01T13:36:12.000Z</lastmod>
    
    <date>1585748172000</date>
    <title>操作系统5-虚拟内存 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 虚拟内存 覆盖技术 把一些不会相互调用的函数分配到相同的地址空间，当需要调用的时候覆盖内存就可以了。 需要程序员来设计，费时费力，模块的覆盖是时间换空间 # 交换技术 让暂时不运行的程序交换到磁盘中，当使用</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8433Z.html</loc>
    
    <lastmod>2020-04-01T13:35:59.000Z</lastmod>
    
    <date>1585748159000</date>
    <title>操作系统4-非连续内存分配 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 非连续内存分配 优点: 一个程序的物理空间是非连续的，更好的内存利用，允许共享代码与数据(共享库等),支持动态加载和动态链接 # 分段机制 程序等栈段、堆段、数据段、等等分散到多个物理空间， # 硬件堆分段</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q8433P.html</loc>
    
    <lastmod>2020-04-01T13:35:49.000Z</lastmod>
    
    <date>1585748149000</date>
    <title>操作系统3-连续内存分配 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial CPU内存 CPU-L1cache-L2cache-memery-disk # 逻辑地址空间 抽象、隔离、保护、共享、虚拟化(临时放入disk) # 内存管理 程序重定向，分段，分页，虚拟内存，按需分叶虚拟</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q84331.html</loc>
    
    <lastmod>2020-04-01T13:35:25.000Z</lastmod>
    
    <date>1585748125000</date>
    <title>操作系统2-中断异常调用 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 操作系统的启动 DISK中放操作系统，BIOS是基本的IO系统，检测外设，Bootloader能够加载OS，BIOS从CS段寄存器;IP指令寄存器开始执行，然后BIOS会POST(加电自检)，然后BIOS找</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q83OYN.html</loc>
    
    <lastmod>2020-04-01T08:30:23.000Z</lastmod>
    
    <date>1585729823000</date>
    <title>操作系统1-操作系统 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 操作系统是什么 是一个控制软件，能管理应用程序，为应用程序提供服务，杀死应用程序，能够分配资源，能够管理外部设备，承上启下，硬件之上，应用程序之下， # Kernel CPU调度,物理内存管理，虚拟内存管理</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q80DTB.html</loc>
    
    <lastmod>2020-03-30T13:36:47.000Z</lastmod>
    
    <date>1585575407000</date>
    <title>笛卡尔树 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q80CPR.html</loc>
    
    <lastmod>2020-03-30T13:13:03.000Z</lastmod>
    
    <date>1585573983000</date>
    <title>阿里笔试 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7UAGN.html</loc>
    
    <lastmod>2020-03-29T10:48:10.000Z</lastmod>
    
    <date>1585291127000</date>
    <title>Git使用总结 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 创建工作空间 我们先创建一个工作空间myGit，在其中创建一个项目project，植入两个文件a.txt和b.txt，并分别写入"a"和"b" 123456cd ~ mkdir -p myGit/proje</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q74F7T.html</loc>
    
    <lastmod>2020-03-28T07:33:05.000Z</lastmod>
    
    <date>1584084233000</date>
    <title>C++入门 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7QRVA.html</loc>
    
    <lastmod>2020-03-26T15:17:49.000Z</lastmod>
    
    <date>1585127062000</date>
    <title>设计模式 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 为什么我们需要设计模式 有一类问题会在软件设计中反复出现，我们能够提出一种抽象的方法来解决这类问题，这就是设计模式。 设计模式的七大原则 单一职责原则 接口隔离原则 依赖反转原则 里氏替换原则 开闭原则 迪</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7STKS.html</loc>
    
    <lastmod>2020-03-26T11:36:28.000Z</lastmod>
    
    <date>1585222588000</date>
    <title>spring学习2-spring介绍2 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7P485.html</loc>
    
    <lastmod>2020-03-25T14:23:39.000Z</lastmod>
    
    <date>1585049765000</date>
    <title>STL源码分析 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7QOEF.html</loc>
    
    <lastmod>2020-03-25T07:49:27.000Z</lastmod>
    
    <date>1585122567000</date>
    <title>爬虫 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7PE5O.html</loc>
    
    <lastmod>2020-03-24T15:10:36.000Z</lastmod>
    
    <date>1585062636000</date>
    <title>spring学习1-spring入门 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7OQEI.html</loc>
    
    <lastmod>2020-03-24T06:37:30.000Z</lastmod>
    
    <date>1585031850000</date>
    <title>hadoop | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial hadoop hadoop = common+hdfs+mapreduce+yarn common 工具、rpc通信 hdfs 分布式文件系统，一个文件分成多个128Mb的文件，存储在多个节点，为了保证分区</desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7BOTC.html</loc>
    
    <lastmod>2020-03-17T13:16:57.000Z</lastmod>
    
    <date>1584423264000</date>
    <title>Boost | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7BSO7.html</loc>
    
    <lastmod>2020-03-17T08:55:58.000Z</lastmod>
    
    <date>1584428263000</date>
    <title>Boost源码 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7A9H5.html</loc>
    
    <lastmod>2020-03-16T11:05:29.000Z</lastmod>
    
    <date>1584356729000</date>
    <title>Y快速前缀树 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7A61B.html</loc>
    
    <lastmod>2020-03-16T09:51:11.000Z</lastmod>
    
    <date>1584352271000</date>
    <title>X快速前缀树 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q7A2SC.html</loc>
    
    <lastmod>2020-03-16T08:41:00.000Z</lastmod>
    
    <date>1584348060000</date>
    <title>三叉搜索树 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R9W.html</loc>
    
    <lastmod>2020-03-16T04:32:20.000Z</lastmod>
    
    <date>1584333140000</date>
    <title>cartesianTree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R9P.html</loc>
    
    <lastmod>2020-03-16T04:32:13.000Z</lastmod>
    
    <date>1584333133000</date>
    <title>VPTree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R9I.html</loc>
    
    <lastmod>2020-03-16T04:32:06.000Z</lastmod>
    
    <date>1584333126000</date>
    <title>scapegoateTree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R98.html</loc>
    
    <lastmod>2020-03-16T04:31:56.000Z</lastmod>
    
    <date>1584333116000</date>
    <title>无旋Treap | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R91.html</loc>
    
    <lastmod>2020-03-16T04:31:49.000Z</lastmod>
    
    <date>1584333109000</date>
    <title>Treap | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R8R.html</loc>
    
    <lastmod>2020-03-16T04:31:39.000Z</lastmod>
    
    <date>1584333099000</date>
    <title>SplayTree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R8K.html</loc>
    
    <lastmod>2020-03-16T04:31:32.000Z</lastmod>
    
    <date>1584333092000</date>
    <title>AATree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R8E.html</loc>
    
    <lastmod>2020-03-16T04:31:26.000Z</lastmod>
    
    <date>1584333086000</date>
    <title>LLRBTree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R89.html</loc>
    
    <lastmod>2020-03-16T04:31:21.000Z</lastmod>
    
    <date>1584333081000</date>
    <title>RBTree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R83.html</loc>
    
    <lastmod>2020-03-16T04:31:15.000Z</lastmod>
    
    <date>1584333075000</date>
    <title>TTree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R7Y.html</loc>
    
    <lastmod>2020-03-16T04:31:10.000Z</lastmod>
    
    <date>1584333070000</date>
    <title>234Tree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R7T.html</loc>
    
    <lastmod>2020-03-16T04:31:05.000Z</lastmod>
    
    <date>1584333065000</date>
    <title>23Tree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R7O.html</loc>
    
    <lastmod>2020-03-16T04:31:00.000Z</lastmod>
    
    <date>1584333060000</date>
    <title>BstartTree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R7E.html</loc>
    
    <lastmod>2020-03-16T04:30:50.000Z</lastmod>
    
    <date>1584333050000</date>
    <title>B+Tree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R78.html</loc>
    
    <lastmod>2020-03-16T04:30:44.000Z</lastmod>
    
    <date>1584333044000</date>
    <title>BTree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R72.html</loc>
    
    <lastmod>2020-03-16T04:30:38.000Z</lastmod>
    
    <date>1584333038000</date>
    <title>AVL | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q79R6U.html</loc>
    
    <lastmod>2020-03-16T04:30:30.000Z</lastmod>
    
    <date>1584333030000</date>
    <title>BST | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q72280.html</loc>
    
    <lastmod>2020-03-12T00:48:00.000Z</lastmod>
    
    <date>1583974080000</date>
    <title>search_tree | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q70NUN.html</loc>
    
    <lastmod>2020-03-11T06:39:59.000Z</lastmod>
    
    <date>1583908799000</date>
    <title>math | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q6T33K.html</loc>
    
    <lastmod>2020-03-07T04:28:32.000Z</lastmod>
    
    <date>1583555312000</date>
    <title>vim入门教程 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q6M13Q.html</loc>
    
    <lastmod>2020-03-03T09:02:14.000Z</lastmod>
    
    <date>1583226134000</date>
    <title>heap | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q6GPQN.html</loc>
    
    <lastmod>2020-02-29T12:08:47.000Z</lastmod>
    
    <date>1582978127000</date>
    <title>势能分析 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q6AVP7.html</loc>
    
    <lastmod>2020-02-26T08:31:55.000Z</lastmod>
    
    <date>1582705915000</date>
    <title>矩阵的特征值与特征向量 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q6AHME.html</loc>
    
    <lastmod>2020-02-26T03:27:50.000Z</lastmod>
    
    <date>1582687670000</date>
    <title>矩阵分解 | Believe it</title>
    
    <desc>nexthexonextbutterflyvolantisyearnyiliashokaindigoapollolandscapecactusmateryicarusfluidmaterial 矩阵的分解 矩阵的分解非常重要，很多时候我们都需要使用到矩阵的分解，这会给我们提供极大的方便,笔者学习这一类问题花费了很多时间,想要看懂这一章，需要先看{ post_link 矩阵的类型及性质 } ### </desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q6AHJ2.html</loc>
    
    <lastmod>2020-02-26T03:25:50.000Z</lastmod>
    
    <date>1582687550000</date>
    <title>矩阵的类型以及性质 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q5W8L1.html</loc>
    
    <lastmod>2020-02-18T10:46:13.000Z</lastmod>
    
    <date>1582022773000</date>
    <title>晚期(运行期)优化 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q5VXIG.html</loc>
    
    <lastmod>2020-02-18T06:47:04.000Z</lastmod>
    
    <date>1582008424000</date>
    <title>LDA | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q5TYBT.html</loc>
    
    <lastmod>2020-02-17T05:09:29.000Z</lastmod>
    
    <date>1581916169000</date>
    <title>早期(编译期)优化 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q5SN0R.html</loc>
    
    <lastmod>2020-02-16T12:07:39.000Z</lastmod>
    
    <date>1581854859000</date>
    <title>Java线程安全与锁优化 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q5QPOK.html</loc>
    
    <lastmod>2020-02-15T11:09:56.000Z</lastmod>
    
    <date>1581764996000</date>
    <title>Java内存模型与线程 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q5KMBU.html</loc>
    
    <lastmod>2020-02-12T04:11:54.000Z</lastmod>
    
    <date>1581480714000</date>
    <title>Java内存区域于内存溢出异常 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q5KF8D.html</loc>
    
    <lastmod>2020-02-12T01:38:37.000Z</lastmod>
    
    <date>1581471517000</date>
    <title>走进Java | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q2G0IL.html</loc>
    
    <lastmod>2019-12-13T08:49:33.000Z</lastmod>
    
    <date>1576226973000</date>
    <title>kernelFunctions | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q2FI55.html</loc>
    
    <lastmod>2019-12-13T02:12:41.000Z</lastmod>
    
    <date>1576203161000</date>
    <title>Lnorm | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q24ZYI.html</loc>
    
    <lastmod>2019-12-07T10:03:54.000Z</lastmod>
    
    <date>1575713034000</date>
    <title>metric_space | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/Q0OU24.html</loc>
    
    <lastmod>2019-11-09T06:01:16.000Z</lastmod>
    
    <date>1573279276000</date>
    <title>软件需求复习 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/home/index.html</loc>
    
    <lastmod>2019-11-08T15:47:02.000Z</lastmod>
    
    <date>1573228022000</date>
    <title>home | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/PWA2WM.html</loc>
    
    <lastmod>2019-08-15T12:33:58.000Z</lastmod>
    
    <date>1565872438000</date>
    <title>c++快读 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/tags/index.html</loc>
    
    <lastmod>2019-08-08T12:20:09.000Z</lastmod>
    
    <date>1565266809000</date>
    <title>tags | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/PQW4S0.html</loc>
    
    <lastmod>2019-05-02T19:00:00.000Z</lastmod>
    
    <date>1556823600000</date>
    <title>虚拟内存 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/PQW200.html</loc>
    
    <lastmod>2019-05-02T18:00:00.000Z</lastmod>
    
    <date>1556820000000</date>
    <title>补码 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/PQVZ80.html</loc>
    
    <lastmod>2019-05-02T17:00:00.000Z</lastmod>
    
    <date>1556816400000</date>
    <title>浅谈缓存 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/PQVWG0.html</loc>
    
    <lastmod>2019-05-02T16:00:00.000Z</lastmod>
    
    <date>1556812800000</date>
    <title>用数学浅谈浮点数 | Believe it</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://fightinggg.github.io/PK6YM1.html</loc>
    
    <lastmod>2018-12-23T13:25:13.000Z</lastmod>
    
    <date>1545571513000</date>
    <title>排序算法比较 | Believe it</title>
    
    <desc></desc>
  </url>
  
</urlset>
